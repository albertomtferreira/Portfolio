/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const RubberDuck = React.memo(function Wizard(props) {
  // Use React.memo for performance optimization
  const { nodes, materials } = useGLTF("./models/rubber_duck.glb");

  const modelRef = useRef();

  useFrame((state) => {
    modelRef.current.position.y =
      -1.5 + Math.sin(state.clock.elapsedTime) * 0.3;
  });

  return (
    <group
      {...props}
      dispose={null}
      ref={modelRef}
      position={[0, 0, 1]}
      scale={[1.5, 1.5, 1.5]}
      rotation={[0.5, 0.6, 0]}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_2.geometry}
        material={materials.Duck}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  );
});

export default RubberDuck;
useGLTF.preload("/models/rubber_duck.glb");
